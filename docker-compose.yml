services:
  nginx:
    image: nginx:latest
    container_name: nginx-container
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/:/etc/nginx/conf.d/
      - ./docker/logs/nginx/:/var/log/nginx/
      - ./app/static/:/var/www/static/:cached
    tty: true
    depends_on:
      - app
    networks:
      - app_network
  app:
    build:
      context: .
      dockerfile: docker/go/Dockerfile
      target: ${SERVICE_MODE} # Це дозволяє вибрати етап збірки!
    container_name: go-ipr-app
    ports:
      - "8080:8080"
    volumes:
      - ./app/:/app:cached
    command: ${RUN_CMD}
    networks:
      - app_network

  db:
    image: postgres:14
    container_name: go-ipr-db
    environment:
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: app_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - app_network

  frontend_build:
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    volumes:
      - ./app/:/usr/src/app:cached
      # Bind mounted node_modules to avoid overwriting container's node_modules
      - /usr/src/app/node_modules
    command: [ "node", "esbuild.config.js" ]
    tty: true

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local